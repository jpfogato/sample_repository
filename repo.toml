
[dependencies]
vcs_interfaces = { version = "2.0.1", include_source = false }
vpi = ">=23.3.0"
build_controller = ">=4.0.0"

[builder]
enabled = true  # Whether the automatic builder is enabled
output_dir = "target"  # Directory where build artifacts will be stored
log_level = "info"  # Logging level: debug, info, warning, error

[builder.project] 
lv_version = "2023" # LabVIEW version to use
project_file = "MyProject.lvproj" # LabVIEW project file
build_spec = "MyApplication" # Build specification name in LabVIEW


[builder.commands]
# Launches the build controller as a G-CLI app with different input parameters as options for different states of the building process.
# Check the G-CLI documentation here for understanding implementation: 
# https://github.com/G-CLI/G-CLI
pre_build = [
	"echo Preparing build...",
	"cd ext/build_controller/target",
	"g-cli build_controller -- --action pre_build --config \"TOML_FILE\" " ]  # Commands to run before building, like running source code quality tasks (Caraya UT or VI Analyzer scripts)
build = [
	"echo Building...",
	"cd ext/build_controller/target",
	"g-cli build_controller -- --action build --config \"TOML_FILE\" "]  # Main build command
post_build = [
	"echo Build completed!",
	"cd ext/build_controller/target",
	"g-cli build_controller -- --action post_build --config \"TOML_FILE\" " ]  # Commands to run after successful build, in this case, hashing the build

[builder.notifications]
email = "alerts@example.com"  # Email for build failure notifications
webhook = "https://hooks.example.com/build"  # Webhook URL for notifications

[doc]
download = [
	"https://example.com/file1.pdf",
	"https://example.com/file2.pdf",
	"https://example.com/file3.pdf" 
]
destination = "doc"